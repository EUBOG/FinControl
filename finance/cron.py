async def send_telegram_message(telegram_id, message):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram"""
    try:
        from telegram_bot import bot
        await bot.send_message(telegram_id, message)
        print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {telegram_id}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {e}")


def send_daily_notifications():
    """–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ç—Ä–∞—Ç–∞—Ö –∑–∞ –¥–µ–Ω—å"""
    print("üìä –û—Ç–ø—Ä–∞–≤–∫–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...")

    today = timezone.now().date()
    yesterday = today - timedelta(days=1)

    users = User.objects.all()

    for user in users:
        try:
            from finance.models import Transaction
            transactions = Transaction.objects.filter(
                user=user,
                date=yesterday
            )

            if transactions.exists():
                total_income = transactions.filter(type='income').aggregate(Sum('amount'))['amount__sum'] or 0
                total_expense = transactions.filter(type='expense').aggregate(Sum('amount'))['amount__sum'] or 0

                message = (
                    f"üìä –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç –∑–∞ {yesterday.strftime('%d.%m.%Y')}:\n"
                    f"üíµ –î–æ—Ö–æ–¥—ã: {total_income:.2f} —Ä—É–±.\n"
                    f"üí∏ –†–∞—Å—Ö–æ–¥—ã: {total_expense:.2f} —Ä—É–±.\n"
                    f"üí∞ –ë–∞–ª–∞–Ω—Å: {total_income - total_expense:.2f} —Ä—É–±.\n"
                    f"üìà –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞—Ü–∏–π: {len(transactions)}"
                )

                print(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è {user.username}: {message}")

                # üî• –î–û–ë–ê–í–ò–¢–¨ –û–¢–ü–†–ê–í–ö–£ –í TELEGRAM
                # –ù—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å telegram_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                # –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –≤—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.username}: {e}")

    for user in users:
        try:
            # ... –ø–æ–¥—Å—á–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π ...

            if transactions.exists():
                # ... —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è ...

                # üî• –û–¢–ü–†–ê–í–ö–ê –í TELEGRAM
                if hasattr(user, 'consent') and user.consent.telegram_id:
                    import asyncio
                    asyncio.run(send_telegram_message(user.consent.telegram_id, message))
                else:
                    print(f"‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω telegram_id –¥–ª—è {user.username}")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.username}: {e}")