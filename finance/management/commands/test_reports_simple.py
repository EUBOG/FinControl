# finance/management/commands/test_reports_simple.py
from django.core.management.base import BaseCommand
from django.contrib.auth.models import User
from datetime import datetime, timedelta


class Command(BaseCommand):
    help = 'Simple test for PDF/Excel report generation'

    def handle(self, *args, **options):
        # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
        try:
            from finance.reports.excel_report import generate_excel_report
            from finance.reports.pdf_report import generate_pdf_report

            user = User.objects.first()
            if not user:
                self.stdout.write(self.style.ERROR('‚ùå No users found! Create a user first.'))
                return

            end_date = datetime.now().date()
            start_date = end_date - timedelta(days=7)  # –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π

            self.stdout.write(f'Testing reports for user: {user.username}')
            self.stdout.write(f'Period: {start_date} to {end_date}')

            # –¢–µ—Å—Ç Excel
            self.stdout.write('Testing Excel report...')
            try:
                excel_buffer = generate_excel_report(user, start_date, end_date)
                self.stdout.write(self.style.SUCCESS('‚úÖ Excel report generated!'))

                # –°–æ—Ö—Ä–∞–Ω–∏–º —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
                with open('test_excel_report.xlsx', 'wb') as f:
                    f.write(excel_buffer.getvalue())
                self.stdout.write('üíæ Excel report saved as: test_excel_report.xlsx')
            except Exception as e:
                self.stdout.write(self.style.ERROR(f'‚ùå Excel error: {e}'))

            # –¢–µ—Å—Ç PDF
            self.stdout.write('Testing PDF report...')
            try:
                pdf_buffer = generate_pdf_report(user, start_date, end_date)
                self.stdout.write(self.style.SUCCESS('‚úÖ PDF report generated!'))

                # –°–æ—Ö—Ä–∞–Ω–∏–º —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
                with open('test_pdf_report.pdf', 'wb') as f:
                    f.write(pdf_buffer.getvalue())
                self.stdout.write('üíæ PDF report saved as: test_pdf_report.pdf')
            except Exception as e:
                self.stdout.write(self.style.ERROR(f'‚ùå PDF error: {e}'))

        except ImportError as e:
            self.stdout.write(self.style.ERROR(f'‚ùå Import error: {e}'))
            self.stdout.write('Make sure all required packages are installed:')
            self.stdout.write('pip install openpyxl reportlab')